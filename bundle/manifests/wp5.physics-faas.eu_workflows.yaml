apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: workflows.wp5.physics-faas.eu
spec:
  group: wp5.physics-faas.eu
  names:
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    singular: workflow
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Workflow is the Schema for the workflows API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkflowSpec defines the desired state of Workflow
            properties:
              actions:
                items:
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations per function
                      type: object
                    code:
                      description: 'Code: function code is passed as string here'
                      type: string
                    codeRepo:
                      description: 'CodeRepo: function code is obtained from a repo'
                      type: string
                    description:
                      type: string
                    extraResources:
                      description: 'ExtraResources: Other resources needed by physics,
                        such as cpu or memory'
                      properties:
                        diskType:
                          type: string
                        gpu:
                          type: boolean
                      type: object
                    functionInput:
                      additionalProperties:
                        properties:
                          default:
                            type: string
                          description:
                            type: string
                          name:
                            type: string
                          type:
                            type: string
                          value:
                            type: string
                        type: object
                      description: Input params per function
                      type: object
                    id:
                      type: string
                    image:
                      description: 'Image: function code in a docker image'
                      type: string
                    name:
                      type: string
                    # default parameters for actions
                    defaultParams:
                      description: 'default parameters for actions'
                      items:
                        properties: 
                          name:
                            description: 'parameter name'
                            type: string
                          value:
                            description: 'parameter value'
                            type: string
                        type: object
                      type: array
                    performanceProfile:
                      description: 'PerformanceProfile: Information provided by the
                        Performance Profiler module'
                      properties:
                        cpu:
                          type: string
                        fsReads:
                          type: string
                        fsWrites:
                          type: string
                        memory:
                          type: string
                        networkReceived:
                          type: string
                        networkTransmitted:
                          type: string
                      type: object
                    resources:
                      description: 'Same resources as the core k8s for containers:
                        https://github.com/kubernetes/api/blob/master/core/v1/types.go
                        This includes limits and requests'
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    runtime:
                      description: 'Runtime is the function runtime: NodeJS, Python,
                        ...'
                      type: string
                    version:
                      type: string
                  required:
                  - id
                  - name
                  - runtime
                  type: object
                type: array
              execution:
                description: 'Exection is the type of execution mode: NativeSequence,
                  NoderedSequence, or Service'
                type: string
              listOfActions:
                description: ListOfActions is the ordered list of actions to execute
                items:
                  properties:
                    id:
                      type: string
                  required:
                  - id
                  type: object
                type: array
              native:
                type: boolean
              platform:
                description: Platform is the target platform, it can be OpenWhisk,
                  Knative, ...
                type: string
              type:
                type: string
            required:
            - actions
            type: object
          status:
            description: WorkflowStatus defines the observed state of Workflow
            properties:
              actionStatSer:
                type: string
              actionStatus:
                items:
                  properties:
                    backendURL:
                      type: string
                    id:
                      description: "Package\tstring `json:\"package\"`"
                      type: string
                    message:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                    remote:
                      type: string
                    runtime:
                      type: string
                    state:
                      type: string
                    version:
                      type: string
                    # NEW
                    actionHost:
                      type: string
                    actionNamespace:
                      type: string
                    actionCredentials:
                      type: string
                    actionParam1:
                      type: string
                    actionParam2:
                      type: string
                  required:
                  - backendURL
                  - id
                  - message
                  - name
                  - namespace
                  - runtime
                  - state
                  - version
                  type: object
                type: array
              conditions:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file Conditions represent the latest available observations
                  of an object''s state'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
